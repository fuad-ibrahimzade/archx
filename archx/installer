#!/usr/bin/env bash
#### Created with love by MohammadAlijani
clear
# Define colors
# Reset
colorOff='\033[0m'       # Text Reset
# Regular Colors
red='\033[0;31m'          # red
green='\033[0;32m'        # green
yellow='\033[0;33m'       # yellow
blue='\033[0;34m'         # blue
white='\033[0;37m'        # white
purple='\033[0;35m'       # purple

# Archx ascii art
echo -e """${blue} 
                 █████████                     █████                
                ███▒▒▒▒▒███                    ▒▒███                 
               ▒███    ▒███  ████████   ██████  ▒███████   █████ █████
               ▒███████████ ▒▒███▒▒██ ████▒▒███ ▒███▒▒███ ▒▒███ ▒▒███ 
               ▒███▒▒▒▒▒███  ▒███ ▒▒▒ ▒███ ▒▒▒  ▒███ ▒███  ▒▒▒█████▒  
               ▒███    ▒███  ▒███     ▒███  ███ ▒███ ▒███   ███▒▒▒███ 
               █████   █████ █████    ▒▒██████  ████ █████ █████ █████
              ▒▒▒▒▒   ▒▒▒▒▒▒ ▒▒▒▒      ▒▒▒▒▒▒  ▒▒▒▒ ▒▒▒▒▒▒ ▒▒▒▒ ▒▒▒▒▒ 

${colorOff}
"""
sleep 5

# you should be online if you didn't downloaded fakepkg script
# Check for fakepkg
if [ -e ./fakepkg ];then
	FAKEPKG=$(pwd)/fakepkg && chmod +x fakepkg
else
	curl -s -o fakepkg https://raw.githubusercontent.com/virtualdemon/archx/master/fakepkg && chmod +x fakepkg  && FAKEPKG=$(pwd)/fakepkg
fi

# Check is /mnt used as mountpoint?
mountpoint -q /mnt
if [ $? == 0 ];then
	echo -e "${green}Detected /mnt as mountpoint \n"
else
	echo -e "${red}Can't detect /mnt as mountpoint!"
	exit 1
fi

echo  -e "${green}Starting offline installation \n"
# Create pacman-cache directory and change directory to there
mkdir -p /mnt/var/cache/pacman/pkg/
clear

echo -e "${yellow}You are here :${green} $(pwd) "

# Recreate live system packages with fakepkg and pacstrap script
read -p "$(echo -e "${white}which groups do you want to recreate? ${green}\n[1] whole system ${white}\n make your choice : ")" Answer_Package_Recreate

case "$Answer_Package_Recreate" in
	"1"|"whole system")
		$FAKEPKG -v $(pacman -Qq) -o /mnt/var/cache/pacman/pkg/ 2> /dev/null 
		;;
	

	*) 
		echo -e "${red}Wrong answer. No package will be recreate!..."
		exit 1
		;;
esac

# Remove corrupted packages
rm -f /var/cache/pacman/pkg/*.part

# Change directory to ~/
clear
cd
echo -e "${green}Process completed!${yellow} You are here : ${green} $(pwd) ${colorOff} \n" 
sleep 3

# Create neccessary directories
echo -e "${green}Installing packages to /mnt${colorOff} \n"

mkdir -m 0755 -p /mnt/var/{cache/pacman/pkg,lib/pacman,log} /mnt/{dev,run,etc}
mkdir -m 1777 -p /mnt/tmp
mkdir -m 0555 -p /mnt/{sys,proc}
mkdir -m 700 /mnt/root
mkdir -m 755 -p /mnt/boot

# Mount needed directories
mount --bind /dev /mnt/dev
mount --bind /proc /mnt/proc
mount --bind /sys /mnt/sys

# Install reassembled packages to /mnt
pacman -r /mnt -U /mnt/var/cache/pacman/pkg/* --noconfirm --needed

# Copy vmlinuz-linux from live system  to new system 
cp -avT /run/archiso/bootmnt/arch/boot/$(uname -m)/vmlinuz /mnt/boot/vmlinuz-linux


# Copy pacman mirrorlist
cp -a /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist

# Generate fstab with device UUID : you can edit it in /etc/fstab
genfstab -U -p /mnt > /mnt/etc/fstab && cat /mnt/etc/fstab

# Download auto_chroot script or check it existence
if [ -e ./auto_chroot ];then
  cp ./auto_chroot /mnt/tmp/auto_chroot
elif [[ $(ping -c 2 google.com) ]];then
	echo -e "${purple}Downloading auto_chroot script from raw.githubusercontent.com/virtualdemon/archx/master/auto_chroot in ${green}/mnt/tmp/auto_chroot${colorOff}" 
	sleep 3
	curl -s -o /mnt/tmp/auto_chroot https://raw.githubusercontent.com/virtualdemon/archx/master/auto_chroot
	chmod +x /mnt/tmp/auto_chroot
fi

# Change root to /mnt
echo -e "${green}Changing root${colorOff}\n"
chroot /mnt
